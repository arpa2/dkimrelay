# /etc/arpa2mail/dkimrelay.conf
#
# This file configures the DKIMrelay.  The file is read at startup time.
#
# Home of DKIMrelay: https://github.com/arpa2/dkimrelay
#
# From: Rick van Rein <rick@openfortress.nl>



#
# The [DKIM] section defines how DKIM would normally be operated.
#
[DKIM]


#
# The list of domain names that are signed by this filter.  Anything
# else passes unsigned.  The domain will take responsibility and be
# added to the DKIM-Signature.
#
# The domain is taken from the envelope's MAIL FROM command, and should
# be interpreted before any SRS processing takes place [as that sets
# this field to the local domain instead of a remote domain to compensate
# for SPF failure caused by forwarding].
#
# You can include * to cover all domains.  There is no support for more
# refined forms of wildcard, just the fixed notation '*' for all domains.
#
# By default, this is an empty list, to never add DKIM-Signature: headers.
#
domains: example.com example.net

#
# The selector used in the DKIM-Signature, needed to locate the public
# key in DNS, in a TXT record for "%(selector)s._domainkey.%(domain)s".
# The same selector is used for all domains that are signed here, so
# the listed domains must coordinate this name (usually trivial).
#
# The pattern can use the following variable substitutions:
#  - %(domain)s for the sender domain
#
selector: mykey

#
# The path to the private key file used for producing the DKIM-Signature.
# A pattern referencing the selector is currently setup, but one might
# also choose to include the domain name in the pattern.
#
# The pattern can use the following variable substitutions:
#  - %(selector)s for the selector to the sender domain
#  - %(domain)s   for the sender domain
#
privkey: /var/lib/dkim/%(selector)s.private

#
# The canonicalisation algorithms used; use 'simple' to have line folding
# invalidate the signature; use 'relaxed' to risk changes to signed
# headers [such as the Subject: header] or the body [such as MIME rewrites]
# to invalidate the signature.
#
# canonicalisation_headers and canonicalisation_body each indicate the part
# of the message that they normalise.  The CURRENT default is relaxed, but
# since we are driving MIME-aware normalisation, we may change this to a
# more lenient algorithm later on.
#
canonicalisation_headers: relaxed
canonicalisation_body:    relaxed

#
# The signing algorithm used.  The default is what was a good idea
# from a cryptographic viewpoint at the time this program was
# released.  The CURRENT default is rsa-sha256.
#
# Be careful, at some point we will switch to elliptic curves, probably
# because it is a good idea from a crypto compaction viewpoint; you may
# not be ready for it in an operational sense.  If you feel more
# conservative then us, then please set this option explicitly.  But
# also take note that a failed DKIM-Signature is defined as something
# to ignore; it is not defined as a reason on which to reject email.
#
sign_alg: rsa-sha256

#
# Specify non-standard headers to include in the DKIM-Signature.
# This is an optional configuration variable.  Any header names are
# separated by spaces.
#
# TODO: This mechanism should be tested, not just defined.
#
#OPTIONAL# headers: ...

#
# The listenhost is the address at which this filter listens for
# incoming SMTP traffic.  It takes the form of a hostname (usually
# localhost) or IP address (usually ::1).  It defaults to localhost.
#
# The listenport is the port number at which this filter listens for
# incoming SMTP traffic.  It defaults to 25, which is probably NOT
# what you want, except on a standalone DKIM signer host.
#
listenhost: localhost
listenport: 12345

#
# The relayhost is the next step in processing; perhaps SRS processing,
# or an upstream MTA, or the queue for the outgoing message.  It takes
# the form of a hostname or IP address.  It defaults to localhost.
#
# The relayport is the port at which the next step in processing is
# expected to run.  It defaults to 25, which ONLY makes sense when you
# are relaying to an upstream SMTP service such as from your provider.
#
relayhost: smtp.example.com
relayport: 25

#
# Before signing with DKIM, it can be useful to assure that a given text
# is present in the Subject: header and, if not, prefix it with a space
# after it.  This is usually something like "[listname]" for one of the
# recipients, and will not be added again by email lists.  Adding this
# in all cases helps to invalidate the DKIM-Signature: when it passes
# through the list.
#
# This option points to a database, that can be filled the tags for any
# recipient.  This is searched with the recipients.  When multipe
# recipients are found, each will be given the additional tag.
#
# This database is optional, but since it will be skipped when not present,
# it is never harmful to add here.  A configuration option [rcpt2subjtag]
# can map recipients to subject tags as well, though that comes with some
# limitations resulting from this configuration file format, and it will
# only be loaded when the DKIMrelay starts.  Use this database for improved
# dynamicity and scalability, and manage it with the small tool that we
# provided for it: dkimrelay-recipient-subject-tag
#
subjecttagdb: /etc/arpa2mail/rcpt2subjtag.db


#
# RECIPIENT TO SUBJECT TAG MAPPING
#
# Also see subjecttagdb for the dynamic and scalable option.
#
# All keys that go here should contain an '@' character, which means that
# the [DEFAULT] section provides no additional information based on the
# configuration variables that DKIMrelay supports in that section.
#

[RCPT2SUBJTAG]

#EXAMPLE# sales@example.com: [sales]
#EXAMPLE# board@example.net: [management]


