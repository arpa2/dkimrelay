#!/usr/bin/env python
#
# dkimrelay-recipient-subject-tag sets a subject tag for a given recipient
#
# This tool sets a tag for the Subject: line sent to a given recipient.
# When no tag is provided, any pre-existing entry is removed.  This is
# an idempotent operation.
#
# After setting this value, emails to the given recipient will be inspected
# for their Subject: header to include the given tag and, if not, one will
# be prefixed.  For any given email, multiple recipients may lead to
# multiple prefix tags (in arbitrary order).
#
# Home of DKIMrelay: https://github.com/arpa2/dkimrelay
#
# From: Rick van Rein <rick@openfortress.nl>


import sys

import anydbm

import ConfigParser


#
# Load the DKIM configuration from /etc/arpa2mail/dkimrelay.conf
#

defaults = {
	'domains': [],
	'subjecttagdb': '/etc/arpa2mail/rcpt2subjtag.db',
	'relayhost': 'localhost',
	'relayport': '25',
	'listenhost': 'localhost',
	'listenport': '25',
	'canonicalisation_headers': 'relaxed',
	'canonicalisation_body':    'relaxed',
	'sign_alg': 'rsa-sha256',
	'headers': None
}

cfg = ConfigParser.RawConfigParser (defaults)
try:
	cfgf = open ('/etc/arpa2mail/dkimrelay.conf')
except:
	cfgf = open ('dkimrelay.conf')
cfg.readfp (cfgf)
cfgf.close ()

subjecttagdb = cfg.get ('DKIM', 'subjecttagdb')



if len (sys.argv) not in [1,2,3]:
	sys.stderr.write ('Usage: %s [recipient [tag]]\n' % sys.argv [0])
	sys.exit (1)

if len (sys.argv) > 1:
	rcpt = sys.argv [1].lower ()
else:
	rcpt = None

if len (sys.argv) > 2:
	subjtag = sys.argv [2]
else:
	subjtag = None


tagdb = anydbm.open (subjecttagdb, 'c')

# List modus
if rcpt is None:
	print '[rcpt2subjtag]'
	for (rcpt,subjtag) in tagdb.items ():
		if ':' in rcpt:
			sys.stderr.write ('Recipient problem: ' + rcpt + ' contains a colon')
			key = '#KEYERR# ' + rcpt
		elif '=' in rcpt:
			sys.stderr.write ('Recipient problem: ' + rcpt + ' contains an equals sign')
			key = '#KEYERR# ' + rcpt
		elif subjtag [:1] in ' \t\r\n':
			sys.stderr.write ('Subject tag problem: ' + subjtag + ' starts with whitespace')
			key = '#VALERR# ' + rcpt
		else:
			key =  rcpt
		print key + ': ' + subjtag

# Set/Clear modus
if subjtag is not None:
	tagdb [rcpt] = subjtag
else:
	if tagdb.has_key (rcpt):
		del tagdb [rcpt]

tagdb.close ()

